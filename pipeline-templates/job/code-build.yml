jobs:
- job: CodeBuild
  pool:
    name: DAS - Continuous Integration
    demands: Agent.OS -equals Windows_NT
  variables:
  - group: BUILD Management Resources
  - name: buildConfiguration
    value: release
  - name: buildPlatform
    value: anycpu
  - name: SonarCloudProjectKey
    value: SkillsFundingAgency_das-apprentice-commitments-jobs
  workspace:
    clean: all
  steps:
  - task: UseGitVersion@5
    displayName: GitVersion
    inputs:
      versionSpec: 5.x
      useConfigFile: true
      configFilePath: GitVersion.yml

  - task: SonarCloudPrepare@1
    displayName: Prepare SonarCloud analysis configuration
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'),eq(variables['Build.Reason'], 'PullRequest')))
    inputs:
      SonarCloud: ESFA - SonarCloud
      organization: "$(SonarCloudOrganisationKey)"
      scannerMode: MSBuild
      projectName: "$(Build.DefinitionName)"
      projectKey: "$(SonarCloudProjectKey)"

  - template: azure-pipelines-templates/build/step/app-build.yml@das-platform-building-blocks

  - task: SonarCloudAnalyze@1
    displayName: Run SonarCloud analysis
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'),eq(variables['Build.Reason'], 'PullRequest')))

  - task: SonarCloudPublish@1
    displayName: Publish SonarCloud analysis results on build summary
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'),eq(variables['Build.Reason'], 'PullRequest')))
    inputs:
      pollingTimeoutSec: '300'

  - template: azure-pipelines-templates/build/step/dependency-check.yml@das-platform-building-blocks

  - task: DotNetCoreCLI@2
    displayName: 'Publish Function App Apprentice Commitments Jobs'
    inputs:
      command: publish
      publishWebProjects: false
      projects: 'src/SFA.DAS.ApprenticeCommitments.Jobs.Functions/SFA.DAS.ApprenticeCommitments.Jobs.Functions.csproj'
      arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore --no-build'

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      Contents: |
        azure/**
      TargetFolder: '$(build.artifactstagingdirectory)/publish'
      OverWrite: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)/publish'